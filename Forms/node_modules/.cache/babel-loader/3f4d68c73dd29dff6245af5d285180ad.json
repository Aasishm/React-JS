{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Forms\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = () => {\n  _s();\n\n  const {\n    input: name,\n    wasTouched: nameWasTouched,\n    inputHanlder: nameInputHandler,\n    blurHandler: nameBlurHandler,\n    reset: resetName\n  } = useInput();\n  const {\n    input: email,\n    wasTouched: emailWasTouched,\n    inputHandler: emailInputHandler,\n    blurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput();\n  let formIsValid = false;\n  const nameIsValid = name.trim().length !== 0;\n  const emailIsValid = email.trim().includes('@');\n  if (nameIsValid && emailIsValid) formIsValid = true;\n\n  const submitHandler = e => {\n    e.preventDefault();\n    if (!nameIsValid || !emailIsValid) return;\n    resetEmail();\n    resetName();\n  };\n\n  const nameFormValid = nameWasTouched && !nameIsValid ? 'form-control invalid' : 'form-control';\n  const emailFormValid = emailWasTouched && !emailIsValid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameFormValid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputHandler,\n        onBlur: nameBlurHandler,\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), nameWasTouched && !nameIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name field should not be blank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailFormValid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputHandler,\n        onBlur: emailBlurHandler,\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), emailWasTouched && !emailIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Entered Email address is not valid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 45\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"P8pAbljTEYMP1KfenswPqLxNhVw=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/Forms/src/components/SimpleInput.js"],"names":["useInput","SimpleInput","input","name","wasTouched","nameWasTouched","inputHanlder","nameInputHandler","blurHandler","nameBlurHandler","reset","resetName","email","emailWasTouched","inputHandler","emailInputHandler","emailBlurHandler","resetEmail","formIsValid","nameIsValid","trim","length","emailIsValid","includes","submitHandler","e","preventDefault","nameFormValid","emailFormValid"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,oBAArB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAExB,QAAM;AACJC,IAAAA,KAAK,EAACC,IADF;AAEJC,IAAAA,UAAU,EAACC,cAFP;AAGJC,IAAAA,YAAY,EAACC,gBAHT;AAIJC,IAAAA,WAAW,EAACC,eAJR;AAKJC,IAAAA,KAAK,EAACC;AALF,MAMFX,QAAQ,EANZ;AAQA,QAAM;AACJE,IAAAA,KAAK,EAACU,KADF;AAEJR,IAAAA,UAAU,EAACS,eAFP;AAGJC,IAAAA,YAAY,EAACC,iBAHT;AAIJP,IAAAA,WAAW,EAACQ,gBAJR;AAKJN,IAAAA,KAAK,EAACO;AALF,MAMFjB,QAAQ,EANZ;AAQA,MAAIkB,WAAW,GAAG,KAAlB;AACA,QAAMC,WAAW,GAAGhB,IAAI,CAACiB,IAAL,GAAYC,MAAZ,KAAuB,CAA3C;AACA,QAAMC,YAAY,GAAGV,KAAK,CAACQ,IAAN,GAAaG,QAAb,CAAsB,GAAtB,CAArB;AACA,MAAGJ,WAAW,IAAIG,YAAlB,EAAgCJ,WAAW,GAAG,IAAd;;AAEhC,QAAMM,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAG,CAACP,WAAD,IAAgB,CAACG,YAApB,EAAkC;AAClCL,IAAAA,UAAU;AACVN,IAAAA,SAAS;AACV,GALD;;AAOA,QAAMgB,aAAa,GAAGtB,cAAc,IAAI,CAACc,WAAnB,GAAiC,sBAAjC,GAA0D,cAAhF;AACA,QAAMS,cAAc,GAAGf,eAAe,IAAI,CAACS,YAApB,GAAmC,sBAAnC,GAA4D,cAAnF;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEE,aAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEG,aAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,QAAQ,EAAEpB,gBAHZ;AAIE,QAAA,MAAM,EAAEE,eAJV;AAKE,QAAA,KAAK,EAAEN;AALT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAWIE,cAAc,IAAI,CAACc,WAAnB,iBAAkC;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXtC,eAYE;AAAK,MAAA,SAAS,EAAES,cAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,QAAQ,EAAEb,iBAHZ;AAIE,QAAA,MAAM,EAAEC,gBAJV;AAKE,QAAA,KAAK,EAAEJ;AALT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,EAsBIC,eAAe,IAAI,CAACS,YAApB,iBAAoC;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBxC,eAuBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAE,CAACJ,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA9DD;;GAAMjB,W;UAQAD,Q,EAQAA,Q;;;KAhBAC,W;AAgEN,eAAeA,WAAf","sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst SimpleInput = () => {\n\n  const {\n    input:name,\n    wasTouched:nameWasTouched,\n    inputHanlder:nameInputHandler,\n    blurHandler:nameBlurHandler,\n    reset:resetName\n  } = useInput();\n\n  const {\n    input:email,\n    wasTouched:emailWasTouched,\n    inputHandler:emailInputHandler,\n    blurHandler:emailBlurHandler,\n    reset:resetEmail\n  } = useInput();\n\n  let formIsValid = false;\n  const nameIsValid = name.trim().length !== 0;\n  const emailIsValid = email.trim().includes('@');\n  if(nameIsValid && emailIsValid) formIsValid = true;\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if(!nameIsValid || !emailIsValid) return;\n    resetEmail();\n    resetName();\n  }\n\n  const nameFormValid = nameWasTouched && !nameIsValid ? 'form-control invalid' : 'form-control';\n  const emailFormValid = emailWasTouched && !emailIsValid ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={nameFormValid}>\n        <label htmlFor='name'>Name</label>\n        <input \n          type='text' \n          id='name' \n          onChange={nameInputHandler}\n          onBlur={nameBlurHandler}\n          value={name}\n        />\n      </div>\n      { nameWasTouched && !nameIsValid && <p className='error-text'>Name field should not be blank</p>}\n      <div className={emailFormValid}>\n        <label htmlFor='email'>Email</label>\n        <input \n          type='text' \n          id='email' \n          onChange={emailInputHandler}\n          onBlur={emailBlurHandler}\n          value={email}\n        />\n      </div>\n      { emailWasTouched && !emailIsValid && <p className='error-text'>Entered Email address is not valid</p>}\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}