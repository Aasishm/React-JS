{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useInput = validate => {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [wasTouched, setTouch] = useState(false);\n  const isValid = validate(input);\n  const hasError = !isValid && wasTouched;\n\n  const blurHandler = () => setTouch(true);\n\n  const inputHandler = e => setInput(e.target.value);\n\n  const reset = () => {\n    setInput('');\n    setTouch(false);\n  };\n\n  return {\n    input,\n    isValid,\n    hasError,\n    inputHandler,\n    blurHandler,\n    reset\n  };\n};\n\n_s(useInput, \"NkSCF012peSQT0Ez3msG4vgd5Jc=\");\n\nexport default useInput;","map":{"version":3,"sources":["C:/Users/admin/Documents/React-JS/Forms/src/hooks/use-input.js"],"names":["useState","useInput","validate","input","setInput","wasTouched","setTouch","isValid","hasError","blurHandler","inputHandler","e","target","value","reset"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,UAAD,EAAaC,QAAb,IAAyBN,QAAQ,CAAC,KAAD,CAAvC;AAEA,QAAMO,OAAO,GAAGL,QAAQ,CAACC,KAAD,CAAxB;AACA,QAAMK,QAAQ,GAAG,CAACD,OAAD,IAAYF,UAA7B;;AAEA,QAAMI,WAAW,GAAG,MAAMH,QAAQ,CAAC,IAAD,CAAlC;;AACA,QAAMI,YAAY,GAAIC,CAAD,IAAOP,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAApC;;AAEA,QAAMC,KAAK,GAAG,MAAM;AAChBV,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,GAHD;;AAKA,SAAO;AAACH,IAAAA,KAAD;AAAQI,IAAAA,OAAR;AAAiBC,IAAAA,QAAjB;AAA2BE,IAAAA,YAA3B;AAAyCD,IAAAA,WAAzC;AAAsDK,IAAAA;AAAtD,GAAP;AACH,CAhBD;;GAAMb,Q;;AAkBN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useInput = (validate) => {\r\n    const [input, setInput] = useState('');\r\n    const [wasTouched, setTouch] = useState(false);\r\n\r\n    const isValid = validate(input);\r\n    const hasError = !isValid && wasTouched;\r\n\r\n    const blurHandler = () => setTouch(true);\r\n    const inputHandler = (e) => setInput(e.target.value);\r\n\r\n    const reset = () => {\r\n        setInput('');\r\n        setTouch(false);\r\n    }\r\n\r\n    return {input, isValid, hasError, inputHandler, blurHandler, reset};\r\n}\r\n\r\nexport default useInput;"]},"metadata":{},"sourceType":"module"}