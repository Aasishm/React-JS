{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Forms\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = () => {\n  _s();\n\n  const [name, nameWasTouched, nameInputHandler] = useInput();\n  const [email, emailWasTouched, emailInputHandler] = useInput();\n  /*const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [nameWasTouched, setNameTouch] = useState(false);\n  const [emailWasTouched, setEmailTouch] = useState(false);\n  let formIsValid = false;\n   const nameIsValid = name.trim().length !== 0;\n  const emailIsValid = email.trim().includes('@');\n  if(nameIsValid && emailIsValid) formIsValid = true;\n   const nameInputHandler = (e) => setName(e.target.value);\n  const emailInputHandler = (e) => setEmail(e.target.value);\n   const nameBlurHandler = () => setNameTouch(true);\n  const emailBlurHandler = () => setEmailTouch(true);\n   const submitHandler = (e) => {\n    e.preventDefault();\n    setNameTouch(true);\n    setEmailTouch(true);\n    if(!nameIsValid || !emailIsValid) return;\n    setName('');\n    setEmail('');\n    setNameTouch(false);\n    setEmailTouch(false);\n  }\n   const nameFormValid = nameWasTouched && !nameIsValid ? 'form-control invalid' : 'form-control';\n  const emailFormValid = emailWasTouched && !emailIsValid ? 'form-control invalid' : 'form-control';*/\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameFormValid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputHandler,\n        onBlur: nameBlurHandler,\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), nameWasTouched && !nameIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name field should not be blank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailFormValid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputHandler,\n        onBlur: emailBlurHandler,\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), emailWasTouched && !emailIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Entered Email address is not valid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 45\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"EBqk78IUbGXEPDAzJ2ncSLDr0EQ=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/Forms/src/components/SimpleInput.js"],"names":["useState","useInput","SimpleInput","name","nameWasTouched","nameInputHandler","email","emailWasTouched","emailInputHandler","submitHandler","nameFormValid","nameBlurHandler","nameIsValid","emailFormValid","emailBlurHandler","emailIsValid","formIsValid"],"mappings":";;;AAAA,SAASA,QAAT,QAAwB,OAAxB;AACA,OAAOC,QAAP,MAAqB,oBAArB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,IAAD,EAAOC,cAAP,EAAuBC,gBAAvB,IAA2CJ,QAAQ,EAAzD;AACA,QAAM,CAACK,KAAD,EAAQC,eAAR,EAAyBC,iBAAzB,IAA8CP,QAAQ,EAA5D;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOE,sBACE;AAAM,IAAA,QAAQ,EAAEQ,aAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEC,aAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,QAAQ,EAAEL,gBAHZ;AAIE,QAAA,MAAM,EAAEM,eAJV;AAKE,QAAA,KAAK,EAAER;AALT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAWIC,cAAc,IAAI,CAACQ,WAAnB,iBAAkC;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXtC,eAYE;AAAK,MAAA,SAAS,EAAEC,cAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,QAAQ,EAAEL,iBAHZ;AAIE,QAAA,MAAM,EAAEM,gBAJV;AAKE,QAAA,KAAK,EAAER;AALT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,EAsBIC,eAAe,IAAI,CAACQ,YAApB,iBAAoC;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBxC,eAuBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAE,CAACC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAhED;;GAAMd,W;UAE6CD,Q,EACGA,Q;;;KAHhDC,W;AAkEN,eAAeA,WAAf","sourcesContent":["import { useState} from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = () => {\n\n  const [name, nameWasTouched, nameInputHandler] = useInput();\n  const [email, emailWasTouched, emailInputHandler] = useInput();\n\n  /*const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [nameWasTouched, setNameTouch] = useState(false);\n  const [emailWasTouched, setEmailTouch] = useState(false);\n  let formIsValid = false;\n\n  const nameIsValid = name.trim().length !== 0;\n  const emailIsValid = email.trim().includes('@');\n  if(nameIsValid && emailIsValid) formIsValid = true;\n\n  const nameInputHandler = (e) => setName(e.target.value);\n  const emailInputHandler = (e) => setEmail(e.target.value);\n\n  const nameBlurHandler = () => setNameTouch(true);\n  const emailBlurHandler = () => setEmailTouch(true);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setNameTouch(true);\n    setEmailTouch(true);\n    if(!nameIsValid || !emailIsValid) return;\n    setName('');\n    setEmail('');\n    setNameTouch(false);\n    setEmailTouch(false);\n  }\n\n  const nameFormValid = nameWasTouched && !nameIsValid ? 'form-control invalid' : 'form-control';\n  const emailFormValid = emailWasTouched && !emailIsValid ? 'form-control invalid' : 'form-control';*/\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={nameFormValid}>\n        <label htmlFor='name'>Name</label>\n        <input \n          type='text' \n          id='name' \n          onChange={nameInputHandler}\n          onBlur={nameBlurHandler}\n          value={name}\n        />\n      </div>\n      { nameWasTouched && !nameIsValid && <p className='error-text'>Name field should not be blank</p>}\n      <div className={emailFormValid}>\n        <label htmlFor='email'>Email</label>\n        <input \n          type='text' \n          id='email' \n          onChange={emailInputHandler}\n          onBlur={emailBlurHandler}\n          value={email}\n        />\n      </div>\n      { emailWasTouched && !emailIsValid && <p className='error-text'>Entered Email address is not valid</p>}\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}