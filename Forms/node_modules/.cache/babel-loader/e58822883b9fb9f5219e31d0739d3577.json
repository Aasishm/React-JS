{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\React-JS\\\\Forms\\\\src\\\\components\\\\BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = () => {\n  _s();\n\n  const {\n    input: first,\n    isValid: firstIsValid,\n    hasError: firstError,\n    inputHandler: firstInputHandler,\n    blurHandler: firstBlur,\n    reset: resetFirst\n  } = useInput(value => value.trim() !== '');\n  const {\n    input: last,\n    isValid: lastIsValid,\n    hasError: lastError,\n    inputHandler: lastInputHandler,\n    blurHandler: lastBlur,\n    reset: resetLast\n  } = useInput(value => value.trim() !== '');\n  const {\n    input: email,\n    isValid: emailIsValid,\n    hasError: emailError,\n    inputHandler: emailInputHandler,\n    blurHandler: emailBlur,\n    reset: resetEmail\n  } = useInput(value => value.includes('@'));\n\n  const submitHandler = event => {\n    event.preventDefault();\n    emailBlur();\n    firstBlur();\n    lastBlur();\n    if (!emailIsValid || !firstIsValid || !lastIsValid) return;\n    resetFirst();\n    resetLast();\n    resetEmail();\n  };\n\n  const firstClass = firstError ? 'form-control invalid' : 'form-control';\n  const lastClass = lastError ? 'form-control invalid' : 'form-control';\n  const emailClass = emailError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: firstInputHandler,\n          onBlur: firstBlur,\n          value: first\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), firstError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Invalid First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: lastInputHandler,\n          onBlur: lastBlur,\n          value: last\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), lastError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Invalid Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: emailInputHandler,\n        onBlur: emailBlur,\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"xV5y9VdqMWUlxm4Y+u0etheB1pg=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["C:/Users/admin/Documents/React-JS/Forms/src/components/BasicForm.js"],"names":["useInput","BasicForm","input","first","isValid","firstIsValid","hasError","firstError","inputHandler","firstInputHandler","blurHandler","firstBlur","reset","resetFirst","value","trim","last","lastIsValid","lastError","lastInputHandler","lastBlur","resetLast","email","emailIsValid","emailError","emailInputHandler","emailBlur","resetEmail","includes","submitHandler","event","preventDefault","firstClass","lastClass","emailClass"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,oBAArB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEtB,QAAM;AACJC,IAAAA,KAAK,EAAEC,KADH;AAEJC,IAAAA,OAAO,EAAEC,YAFL;AAGJC,IAAAA,QAAQ,EAAEC,UAHN;AAIJC,IAAAA,YAAY,EAAEC,iBAJV;AAKJC,IAAAA,WAAW,EAAEC,SALT;AAMJC,IAAAA,KAAK,EAAEC;AANH,MAOFb,QAAQ,CAACc,KAAK,IAAIA,KAAK,CAACC,IAAN,OAAiB,EAA3B,CAPZ;AASA,QAAM;AACJb,IAAAA,KAAK,EAAEc,IADH;AAEJZ,IAAAA,OAAO,EAAEa,WAFL;AAGJX,IAAAA,QAAQ,EAAEY,SAHN;AAIJV,IAAAA,YAAY,EAAEW,gBAJV;AAKJT,IAAAA,WAAW,EAAEU,QALT;AAMJR,IAAAA,KAAK,EAAES;AANH,MAOFrB,QAAQ,CAACc,KAAK,IAAIA,KAAK,CAACC,IAAN,OAAiB,EAA3B,CAPZ;AASA,QAAM;AACJb,IAAAA,KAAK,EAAEoB,KADH;AAEJlB,IAAAA,OAAO,EAAEmB,YAFL;AAGJjB,IAAAA,QAAQ,EAAEkB,UAHN;AAIJhB,IAAAA,YAAY,EAAEiB,iBAJV;AAKJf,IAAAA,WAAW,EAAEgB,SALT;AAMJd,IAAAA,KAAK,EAAEe;AANH,MAOF3B,QAAQ,CAACc,KAAK,IAAIA,KAAK,CAACc,QAAN,CAAe,GAAf,CAAV,CAPZ;;AASA,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,SAAS;AACTf,IAAAA,SAAS;AACTS,IAAAA,QAAQ;AACR,QAAG,CAACG,YAAD,IAAiB,CAAClB,YAAlB,IAAkC,CAACY,WAAtC,EAAmD;AACnDJ,IAAAA,UAAU;AACVQ,IAAAA,SAAS;AACTM,IAAAA,UAAU;AACX,GATD;;AAWA,QAAMK,UAAU,GAAGzB,UAAU,GAAG,sBAAH,GAA4B,cAAzD;AACA,QAAM0B,SAAS,GAAGf,SAAS,GAAG,sBAAH,GAA4B,cAAvD;AACA,QAAMgB,UAAU,GAAGV,UAAU,GAAG,sBAAH,GAA4B,cAAzD;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEK,aAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEG,UAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,MAAtB;AAA6B,UAAA,QAAQ,EAAEvB,iBAAvC;AAA0D,UAAA,MAAM,EAAEE,SAAlE;AAA6E,UAAA,KAAK,EAAER;AAApF;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGI,UAAU,iBAAI;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAE0B,SAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,MAAtB;AAA6B,UAAA,QAAQ,EAAEd,gBAAvC;AAAyD,UAAA,MAAM,EAAEC,QAAjE;AAA2E,UAAA,KAAK,EAAEJ;AAAlF;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGE,SAAS,iBAAI;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAK,MAAA,SAAS,EAAEgB,UAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,QAAQ,EAAET,iBAAvC;AAA0D,QAAA,MAAM,EAAEC,SAAlE;AAA6E,QAAA,KAAK,EAAEJ;AAApF;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGE,UAAU,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAkBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CApED;;GAAMvB,S;UASAD,Q,EASAA,Q,EASAA,Q;;;KA3BAC,S;AAsEN,eAAeA,SAAf","sourcesContent":["import useInput from '../hooks/use-input';\n\nconst BasicForm = () => {\n\n  const {\n    input: first,\n    isValid: firstIsValid,\n    hasError: firstError,\n    inputHandler: firstInputHandler,\n    blurHandler: firstBlur,\n    reset: resetFirst\n  } = useInput(value => value.trim() !== '');\n\n  const {\n    input: last,\n    isValid: lastIsValid,\n    hasError: lastError,\n    inputHandler: lastInputHandler,\n    blurHandler: lastBlur,\n    reset: resetLast\n  } = useInput(value => value.trim() !== '');\n\n  const {\n    input: email,\n    isValid: emailIsValid,\n    hasError: emailError,\n    inputHandler: emailInputHandler,\n    blurHandler: emailBlur,\n    reset: resetEmail\n  } = useInput(value => value.includes('@'));\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    emailBlur();\n    firstBlur();\n    lastBlur();\n    if(!emailIsValid || !firstIsValid || !lastIsValid) return;\n    resetFirst();\n    resetLast();\n    resetEmail();\n  }\n\n  const firstClass = firstError ? 'form-control invalid' : 'form-control';\n  const lastClass = lastError ? 'form-control invalid' : 'form-control';\n  const emailClass = emailError ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='control-group'>\n        <div className={firstClass}>\n          <label htmlFor='name'>First Name</label>\n          <input type='text' id='name' onChange={firstInputHandler} onBlur={firstBlur} value={first}/>\n          {firstError && <p className='error-text'>Invalid First Name</p>}\n        </div>\n        <div className={lastClass}>\n          <label htmlFor='name'>Last Name</label>\n          <input type='text' id='name' onChange={lastInputHandler} onBlur={lastBlur} value={last}/>\n          {lastError && <p className='error-text'>Invalid Last Name</p>}\n        </div>\n      </div>\n      <div className={emailClass}>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input type='text' id='name' onChange={emailInputHandler} onBlur={emailBlur} value={email}/>\n        {emailError && <p className='error-text'>Invalid Email Address</p>}\n      </div>\n      <div className='form-actions'>\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}