{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Forms\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [nameWasTouched, setNameTouch] = useState(false);\n  const [emailWasTouched, setEmailTouch] = useState(false);\n  let formIsValid = false;\n  const nameIsValid = name.trim().length !== 0;\n  const emailIsValid = email.trim().includes('@');\n  if (nameIsValid && emailIsValid) formIsValid = true;\n\n  const nameInputHandler = e => setName(e.target.value);\n\n  const emailInputHandler = e => setEmail(e.target.value);\n\n  const nameBlurHandler = () => setNameTouch(true);\n\n  const emailBlurHandler = () => setEmailTouch(true);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setNameTouch(true);\n    setEmailTouch(true);\n    if (!nameIsValid || !emailIsValid) return;\n    setName('');\n    setEmail('');\n    setNameTouch(false);\n    setEmailTouch(false);\n  };\n\n  const nameFormValid = nameWasTouched && !nameIsValid ? 'form-control invalid' : 'form-control';\n  const emailFormValid = emailWasTouched && !emailIsValid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameFormValid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputHandler,\n        onBlur: nameBlurHandler,\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), nameWasTouched && !nameIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name field should not be blank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailFormValid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputHandler,\n        onBlur: emailBlurHandler,\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), emailWasTouched && !emailIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Entered Email address is not valid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 45\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"9k3RyrThth8wc2ZyE9BnB6nP0Po=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/Forms/src/components/SimpleInput.js"],"names":["useState","SimpleInput","name","setName","email","setEmail","nameWasTouched","setNameTouch","emailWasTouched","setEmailTouch","formIsValid","nameIsValid","trim","length","emailIsValid","includes","nameInputHandler","e","target","value","emailInputHandler","nameBlurHandler","emailBlurHandler","submitHandler","preventDefault","nameFormValid","emailFormValid"],"mappings":"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","sourcesContent":["import { useState} from \"react\";\n\nconst SimpleInput = () => {\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [nameWasTouched, setNameTouch] = useState(false);\n  const [emailWasTouched, setEmailTouch] = useState(false);\n  let formIsValid = false;\n\n  const nameIsValid = name.trim().length !== 0;\n  const emailIsValid = email.trim().includes('@');\n  if(nameIsValid && emailIsValid) formIsValid = true;\n\n  const nameInputHandler = (e) => setName(e.target.value);\n  const emailInputHandler = (e) => setEmail(e.target.value);\n\n  const nameBlurHandler = () => setNameTouch(true);\n  const emailBlurHandler = () => setEmailTouch(true);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setNameTouch(true);\n    setEmailTouch(true);\n    if(!nameIsValid || !emailIsValid) return;\n    setName('');\n    setEmail('');\n    setNameTouch(false);\n    setEmailTouch(false);\n  }\n\n  const nameFormValid = nameWasTouched && !nameIsValid ? 'form-control invalid' : 'form-control';\n  const emailFormValid = emailWasTouched && !emailIsValid ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={nameFormValid}>\n        <label htmlFor='name'>Name</label>\n        <input \n          type='text' \n          id='name' \n          onChange={nameInputHandler}\n          onBlur={nameBlurHandler}\n          value={name}\n        />\n      </div>\n      { nameWasTouched && !nameIsValid && <p className='error-text'>Name field should not be blank</p>}\n      <div className={emailFormValid}>\n        <label htmlFor='email'>Email</label>\n        <input \n          type='text' \n          id='email' \n          onChange={emailInputHandler}\n          onBlur={emailBlurHandler}\n          value={email}\n        />\n      </div>\n      { emailWasTouched && !emailIsValid && <p className='error-text'>Entered Email address is not valid</p>}\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}